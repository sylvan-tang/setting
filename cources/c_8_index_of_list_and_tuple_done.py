#!/usr/bin/env python
# coding=utf-8
"""
  Create at 16:09 on 2020/3/8
"""

"""
在元组那一节里面我们有这么一个用法
xiaoming = ("小明", 17701340735)
print(xiaoming[0])  # 把通讯录中xiaoming这个变量对应的姓名打印出来
这里与变量 xiaoming 紧紧靠在一起的 [0] 起到了定位元素的作用，在数列中的作用等同于下标，在编程中我们称之为索引 -- index
在 list 那一节中说过，列表的第一个元素是第 0 项
也就是说，我们也可以通过 [0] 这种方式，获取列表中的某个值，但是注意 [x] 这里的 x 最大只能是列表长度 n 的 -1 值，即 [n-1]
所以对于 list 和 tuple，都有以下操作
"""
a = ("小明", 17701340735)
print(a[0])  # 打印出"小明"
print(a[1])  # 打印出 17701340735

try:
    print(a[2])
except:
    print("不能使用超过 tuple 元素个数的 index")

b = [1990, 1991, 1992]
print(b[0])  # 打印 1990
print(b[1])  # 打印 1991
print(b[2])  # 打印 1992
try:
    print(b[3])
except:
    print("不能使用超过 list 元素个数的 index")

"""
从这里可以看到，tuple 和 list 在 index 的使用上是没有区别的，主要的区别在于定义的方式（中小括号还是中括号），还有对元素的要求（list 只能同一类元素）
通俗的理解是，一个 tuple 定义了一个包含相关联的元素的变量
而一个 list 只是有序的相同类型元素的集合
"""

"""
除了从 0 开始的的 index，还有从 -1 开始的 index，这是因为 python 支持反向索引
也就是 -1 表示列表尾部的第一个元素，对应第 n-1 个元素
而 -n 表示从列表尾部倒数的第 n 个元素，对应第 0 个元素，比如
"""
b = [1990, 1991, 1992]
print(b[-3])  # 打印 1990
print(b[-2])  # 打印 1991
print(b[-1])  # 打印 1992

"""
习题一：按要求打印下面变量的元素
"""
a = (2020, 3, 8, 17, 8, 30)  # 打印第四个
print(a[3])
b = [1, 2, 3]  # 用两种方式打印最后一个元素
print(b[2])
print(b[-1])
c = [5, 6, 7]  # 用两种方式打印第一个元素
print(c[0])
print(c[-3])

"""
习题二：根据要求定义变量
"""
# 小明的学校信息是，钱东第二初级中学，初二，4 班，23号，设计变量存储小明的信息
xiaoming = ("钱东第二初级中学", "初二", 4, "23号")

# 小明的生日是 2000-02-29，设计变量存储到 2020 年为止，小明过了生日的年份
birthdays = [2000, 2004, 2008, 2012, 2016, 2020]
